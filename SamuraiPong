var lives;
var score;
var xSpeed;
var ySpeed;
var ballX;
var ballY;
var ballDiameter = 30;
var paddleSpeed;
var paddleX;
var paddleY = 380;
var paddleWidth = 100;
var paddleHeight = 50;
var starX;
var starY = 40;
var starDiameter = 55;
var moveLeft;
var moveRight;
var isReset;
var canBounce;
onEvent("startbutton", "click", function(event) {
  setScreen("game");
  lives = 2;
  score = 0;
  reset();
  timedLoop(17, update);
});
onEvent("restartbutton", "click", function(event) {
  setScreen("Start");
});
onEvent("game", "keydown", function(event) {
  if (event.key == "Left") {
    moveLeft = true;
  } else if (event.key == "Right") {
    moveRight = true;
  }
});
onEvent("game", "keyup", function(event) {
   if (event.key == "Left") {
    moveLeft = false;
  } else if (event.key == "Right") {
    moveRight = false;
  }
});
onEvent("game", "keypress", function(event) {
  if (event.key == " " && isReset) {
    startGame ();
    hideElement("sad1");
  }
});
function update() {
  movePaddle();
  checkBounce();
  collectStar();
  ballX += xSpeed;
  ballY += ySpeed;
  paddleX += paddleSpeed;
  //positions of everything:
  setText("lives", lives);
  setText("score", score);
  setPosition("ball", ballX, ballY);
  setPosition("paddle", paddleX, paddleY);
  setPosition("star", starX, starY);
}
function movePaddle() {
  if ((moveLeft && !moveRight) && paddleX > 0) {
    paddleSpeed = -11;
  } else if (moveRight && !moveLeft && paddleX + paddleWidth < 320) {
    paddleSpeed = 11;
  } else {
    paddleSpeed = 0;
  }
}
function checkBounce() {
  if (ballX < 0 || ballX + ballDiameter > 320) {
    xSpeed = -xSpeed;
  } else if (ballY < 0 && !canBounce) {
    ySpeed = -ySpeed;
    canBounce = true;
  }
  if (checkCollision(ballX, ballY, ballDiameter, ballDiameter,
  paddleX, paddleY, paddleHeight, paddleWidth) && canBounce) {
    ySpeed = -ySpeed;
    canBounce = false;
  }
  if (ballY + ballDiameter > 450) {
    lives--;
    reset();
    showElement("sad1");
    if (lives == -1)
  {
    endGame();
  }
  }
}
gameMechanics();
function gameMechanics() {
  collectStar() ;
  checkBounce() ;
}
function collectStar() {
  if (checkCollision(ballX, ballY, ballDiameter, ballDiameter, 
  starX, starY, starDiameter, starDiameter)) {
    if (ySpeed < 0 && ySpeed > -30) {
      ySpeed--;
    } else if (ySpeed > 0 && ySpeed < 30){
      ySpeed++;
    }
    if (xSpeed < 0 && xSpeed > -30) {
      xSpeed--;
    } else if(xSpeed > 0 && xSpeed < 30){
      xSpeed++;
    }
    score++;
    playSound("sound://category_explosion/destruction_5.mp3", false);
    starX = 500;
    setTimeout(function() {
      starX = randomNumber(0, 320-starDiameter);
    }, 1100);
  }
}
function reset() {
  showElement("startlabel");
   starX = randomNumber(10,300);
  xSpeed = 0;
  ySpeed = 0;
  paddleSpeed = 0;
  moveLeft = false;
  moveRight = false;
  isReset = true;
  ballX = 145;
  ballY = 210;
  paddleX = 115;
  canBounce = true;
  
}
function startGame() {
  hideElement("startlabel");
  xSpeed = randomNumber (-5,5);
  ySpeed = randomNumber (3,5);
  isReset = false;
}
function endGame() {
  stopTimedLoop();
  setText("finalscore", score);
  setScreen("gameover");
}
function checkCollision(x1, y1, h1, w1, x2, y2, h2, w2) {
  return (((x1 < x2 + w2 && x1 + w1 > x2) && y1 < y2 + h2) && y1 + h1 > y2);
}
onEvent("startbutton", "click", function( ) {
  hideElement("sad1");
});

